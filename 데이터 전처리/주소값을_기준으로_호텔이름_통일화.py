# -*- coding: utf-8 -*-
"""주소값을 기준으로 호텔이름 통일화.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bRcW3jXKXZaqVCZ3RkuMaGHxuFMIx_6l
"""

import pandas as pd

df_hotel = pd.read_csv('리뷰통합.csv')
df_hotel

df_hotel[df_hotel['name'] == '윈스토리 호텔 서귀포']

df_hotel = df_hotel.drop('Unnamed: 0',axis=1)# 불필요한 열 삭제

addr = []
for i in df_hotel['addr']:
  addr.append(i)

list_addr=[]
for j in addr:
  if(j not in list_addr):
    list_addr.append(j)

list_addr# 가지고 올 이름의 기준이 될 주소값을 저장

# 순서를 유지하고 중복을 제거하는 함수
# def delete_duplicated(names):
#   duplicated_name = []
#   for i in names:
#     if(i not in duplicated_name):
#       duplicated_name.append(i)
#   return duplicated_name

list_name =[]#여러 이름을 갖는 호텔들의 리스트
for i in range(len(list_addr)):
  hotel_name = df_hotel[df_hotel['addr'] == list_addr[i]]['name']
  duplicated_name = list(set(hotel_name))#순서를 유지하고 싶을 경우 위의 함수를 사용
  if(len(duplicated_name)>1):#이름값이 두개이상있는 호텔을 list_name에 저장
    list_name.append(duplicated_name)

  
list_name

for i in range(len(list_name)):
  df_hotel.loc[df_hotel['name'] == list_name[i][0],'name'] = list_name[i][1]
  #loc함수를 통해 두 조건에 맞는 열을 지정
  # 선택된 호텔의 이름을 통일화 시킨다

# 3사이트에서 각기 다른 이름을 사용하는 경우도 있기 때문에 list_name이 빈 리스트가 될때까지 반복한다. 
#아래와같이 while문 사용시, 한번에 끝낼 수 있다

n= 1
while(n):
    list_name =[]
    for i in range(len(list_addr)):
      hotel_name = df_hotel[df_hotel['addr'] == list_addr[i]]['name']
      duplicated_name = list(set(hotel_name))#순서를 유지하고 싶을 경우 위의 함수를 사용
      if(len(duplicated_name)>1):
        list_name.append(duplicated_name)
    for i in range(len(list_name)):
      df_hotel.loc[df_hotel['name'] == list_name[i][0],'name'] = list_name[i][1]
    n=len(list_name)

df_hotel[df_hotel['name'] == '윈스토리 호텔 서귀포']

df_hotel.to_csv('최종리뷰.csv', encoding='utf-8-sig')



